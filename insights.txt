- ogarnąć jak interpretować długość przedziału, na razie jest to odcinek wartości tau, ale lepiej jeśli byłaby to
    zmiana wszystkich parametrów razem (pierwiastek z sumy kwadratów) /// ogarnięte **

- problem jeśli x0=(-3, -2.8), d=(0, -1), w=2; może dla ujemnego x0 odwraca się liczenie d? idk

- eason function - znajduje złe minimum dla zbyt dużych długości przedziałów

- nie znajduje funkcji Beale'a

- może się zdarzyć, że aproksymacja funkcją kwadratową daje funkcję liniową, co jest dziwne, ale tak jest, i wtedy
    jest problem bo nie da się znaleźć minimum///// generalnie to jest jakiś bug, to jak jest tworzony obiekt klasy
    Poly, to jak się go stworzy tak: Poly(func) to wychodzi liniowa, a jak się przekopiuj wartość func i zrobi
    Poly(wartość func) to wychodzi normalnie kwadratowa........... ///// dla parametrów: funkcja Booth'a, x0=(0,0)
    d = (10,1) /// powodem jest prawdopodobnie przybliżanie wartości podczas tworzenia obiektu klasy Poly, na razie
    zostało to rozwiązane warunkiem w pętli if (abs(c-b) < epsilon1 or abs(b-a) < epsilon1) **

- thread z optymalizacją nie jest w żaden sposób zabijany przy zamykaniu aplikacji, trzeba to naprawić /// naprawione **

- wizualizacja aproksymacji kwadratowej /// jest **

- tryb krokowy /// jest **

- wyświetlanie wyników /// jest **

- step_mode działa ale niepoprawnie, inna ilość iteracji między standardowym a step_mode + jak się wejdzie w step_mode
    to potem trzeba dokończyć, bo inaczej się nie da wyjść, a jak się odkliknie przycisk trybu krokowego to w ogóle
    się nie da skończyć
   ilość iteracji jest niepoprawna, szczególnie pierwsza i ostatnia, i pierwszy krok wykonuje się dwa razy chyba // działa **

- dla sin(x1)*sin(x2) jest error, jeśli któraś ze składowych kierunku jest 0, bo wtedy aproksymacja jest 0 i nie można
    wykonać optymalizacji, to nie jest błąd a słabość metody, warto to opisać w sprawku!

- Easom x0=(2,2), d=(1,1), w=3              -cos(x1)*cos(x2)*exp(-((x1-pi)^2+(x2-pi)^2))
- Beale ? nic w ogóle nie znajduje          (1.5-x1+x1*x2)^2 + (2.25-x1-x1*x2^2)^2 + (2.625-x1+x1*x2^3)^2
